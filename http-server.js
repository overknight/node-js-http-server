const defaultPageTitle = "Simple HTTP Server",
  {createServer} = require("http"),
  html_page = require("./html-page-template")({
    defaultPageTitle,
    headStylesheet: `    body {
      font-family: Arial, sans-serif;
      max-width: 800px;
      margin: 50px auto;
      padding: 20px;
      background-color: #f5f5f5;
    }
    .container {
      background: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    h1 { color: #333; }
    .info {
      background: #e8f4fd;
      padding: 15px;
      border-radius: 5px;
      margin: 20px 0;
    }
    .details {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 5px;
      margin: 20px 0;
      border-left: 4px solid #007bff;
    }
    a {
      color: #007bff;
      text-decoration: none;
    }
    .nav a {
      margin-right: 15px;
    }
    a:hover { text-decoration: underline; }`
  })

const regexp_extractQuery = /^(.*?)(?:\?(.*)|$)/
const parseRequestInfo = req => {
  if (!req.url) return []
  const info = req.url.match(regexp_extractQuery) || []
  return [info[1], new URLSearchParams(info[2])]
}

const server = createServer((req, res) => {
  const [path, query] = parseRequestInfo(req)
  res.setHeader("Content-Type", "text/html; charset=utf-8")
  if (path === "/") {
    res.statusCode = 200
    const now = Date.now()
    html_page(res, `\n  <div class="container">
    <h1>${defaultPageTitle}</h1>
    <div class="info">
      <p><strong>Server time:</strong> ${new Date(now).toLocaleString()}</p>
    </div>
    <h2>Available pages:</h2>
    <p class="nav">
      <a href="/">Home</a>
      <a href="/about">About the server</a>
      <a href="/api/time">Current time API</a>
    </p>
    <div class="details">
      <p>This server provides a simple web interface and REST API. You can:</p>
      <ul>
        <li>View information about the server through the web interface</li>
        <li>Retrieve data in JSON format via API endpoints</li>
        <li>Use it as a basis for more complex applications</li>
        <li>Learn the basics of creating HTTP servers in Node.js</li>
      </ul>
      <h3>Date format API Examples</h3>
      <ul>
        <li><a href="/api/time/format?timestamp=1748959641963">/api/time/format?timestamp=1748959641963</a></li>
        <li><a href="/api/time/format?timestamp=1753143201305">/api/time/format?timestamp=1753143201305</a></li>
        <li><a href="/api/time/format?timestamp=${now}">/api/time/format?timestamp=${now}</a></li>
      </ul>
    </div>\n  </div>\n`)
    return
  }
  if (path === "/about") {
    res.statusCode = 200
    html_page(res, `\n  <div class="container">
    <h1>About the Server</h1>
    <p>This is a simple HTTP server built with Node.js's native module.</p>
    <p>The code was generated by the <a href="https://bolt.new/">bolt.new AI</a>.</p>
    <p>Node.js version: ${process.version}</p>
    <p>Platform: ${process.platform}</p>
    <p>Architecture: ${process.arch}</p>
    <p><a href="/">‚Üê Back to the Main Page</a></p>
  </div>\n`, `${defaultPageTitle} - About`)
    return
  }
  if (path === "/api/time") {
    res.statusCode = 200
    const date = new Date()
    res.setHeader("Content-Type", "application/json charset=utf-8")
    res.end(JSON.stringify({
      timestamp: date.getTime(),
      datetime: date.toISOString(),
      localTime: date.toLocaleString("ru-RU"),
      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone
    }, null, 2))
    return
  }
  if (path === "/api/time/format") {
    const timestamp = Number(query.get("timestamp"))
    if (timestamp) {
      res.setHeader("Content-Type", "text/plain; charset=utf-8")
      const date = new Date(timestamp)
      const {format} = Intl.DateTimeFormat("ru-RU", {
        dateStyle: "short",
        timeStyle: "long",
        timeZone: "Europe/Moscow",
      })
      res.end(format(date))
      return
    }
  }
  res.statusCode = 404
  if (req.headers.accept.includes("text/html")){
    res.setHeader("Content-Type", "text/plain; charset=utf-8")
    res.end("Error 404: Not found")
    return
  }
  res.end()
})

const PORT = 3000
const HOST = process.env.CODESPACE_NAME

server.listen(PORT, "localhost", ()=>{
  console.log(`HTTP Server listening on https://${HOST}-${PORT}.app.github.dev`)
})